server:
  port: 8888

spring:
  shardingsphere:
    #定义数据源：这里数据库拆分了两个，所以这里需要配置两个数据源。
    datasource:
      # 给每个数据源取别名，下面的ds1,ds1任意取名字
      names: ds0, ds1
      ds0:
        # 配置druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/user_db_0
        username: root
        password: 19870522
        maxPoolSize: 100
        minPoolSize: 5
      ds1:
        # 配置druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/user_db_1
        username: root
        password: 19870522
        maxPoolSize: 100
        minPoolSize: 5

    sharding:
      tables:
        #逻辑表名
        t_user:
          # 配置数据节点：多数据源$->{0..N}.逻辑表名$->{0..N} 相同表,  ${begin..end} 表示区间范围。
          # 逻辑表t_user对应的节点是：ds0.t_user_0, ds0.t_user_1, ds1.t_user_0, ds1.t_user_1
          actual-data-nodes: ds$->{0..1}.t_user_$->{0..1}
          # 拆分库策略，也就是什么样子的数据放入放到哪个数据库中。
          database-strategy:
            inline:
              sharding-column: id    # 分片字段（分片键）
              algorithm-expression: ds$->{id % 2} # 分片算法表达式
          # 拆分表策略，也就是什么样子的数据放入放到哪个数据表中。
          table-strategy:
            inline:
              sharding-column: age    # 分片字段（分片键）
              algorithm-expression: t_user_$->{age % 2} # 分片算法表达式


# 整合mybatis的配置XXXXX
mybatis:
  mapper-locations: classpath:com/qin/mapper/*.xml
  type-aliases-package: com.qin.entity


